searchState.loadedDescShard("buffer_pool", 0, "A convinience wrapper around Vec that allows to “consume…\nA sharded pool of elements.\nA value borrowed from the <code>Pool</code> that can be dereferenced to …\nA trait to optimize read and write operations on pooled …\nA trait that prepares an item to be returned to the pool. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a value from the pool, or create a new default value …\nCreate a new default value assigned for a pool, if it is …\nGet a value from the pool and apply the provided …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet a value from the pool and extend it with the provided …")