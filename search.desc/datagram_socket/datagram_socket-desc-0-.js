searchState.loadedDescShard("datagram_socket", 0, "A convenience method that can be implemented for any type …\nA convenience method that can be implemented for any type …\nExit startup due to bandwidth plateau.\nDescribes an implementation of a connected datagram socket.\nDescribes the receive half of a connected datagram socket.\nReads datagrams from a socket.\nDescribes the send half of a connected datagram socket.\nWrites datagrams to a socket.\nExit startup due to excessive loss\nA cheap wrapper around a datagram socket which describes …\nExit startup due to persistent queue.\nShuts down a datagram oriented connection.\nStatistics from when a CCA first exited the startup phase.\nThe reason a CCA exited the startup phase.\nIf the underlying socket is a <code>UdpSocket</code>, return the …\nIf the underlying socket is a <code>UdpSocket</code>, return the …\nIf the underlying socket is a <code>UdpSocket</code>, return the …\nIf the underlying socket is a <code>UdpSocket</code>, return the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nProvides access to the wrapped socket, allowing the user …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes <code>self</code>, returning the wrapped socket.\nReturns the socket address of the remote peer this socket …\nReturns the socket address of the remote peer this socket …\nAttempts to receive a single datagram message on the …\nAttempts to receive a single datagram on the socket.\nAttempts to receive a single datagram on the socket.\nAttempts to receive multiple datagrams on the socket from …\nAttempts to receive multiple datagrams on the socket from …\nAttempts to send data on the socket to the remote address …\nAttempts to send multiple packets of data on the socket to …\nAttempts to send multiple packets of data on the socket to …\nAttempts to send data on the socket to a given address.\nInitiates or attempts to shut down this writer, returning …\nThe server’s chosen QUIC connection ID.\nReceives a single datagram message on the socket from the …\nReceives a single datagram message on the socket from the …\nReceives a single datagram message on the socket. On …\nReceives a single datagram message on the socket. On …\nReceives multiple datagrams on the socket from the remote …\nReceives multiple datagrams on the socket from the remote …\nSends data on the socket to the remote address that the …\nSends data on the socket to the remote address that the …\nSends multiple data packets on the socket to the to the …\nSends multiple data packets on the socket to the to the …\nSends data on the socket to the given address. On success, …\nSends data on the socket to the given address. On success, …")