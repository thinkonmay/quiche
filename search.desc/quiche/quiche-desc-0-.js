searchState.loadedDescShard("quiche", 0, "ðŸ¥§ Savoury implementation of the QUIC transport protocol â€¦\nAn endpoint has reached the confidentiality or integrity â€¦\nThe application or application protocol caused the â€¦\nBBR congestion control algorithm. <code>bbr</code> in a string form.\nBBRv2 congestion control algorithm. <code>bbr2</code> in a string form.\nExit startup due to bandwidth plateau.\nLogs any events of Core and Base importance.\nBBRv2 congestion control algorithm implementation from â€¦\nThe type of the generated buffer.\nA trait for providing internal storage buffers for <code>RangeBuf</code>â€¦\nA trait that enables zero-copy sends to quiche. When â€¦\nThe provided buffer is too short.\nCUBIC congestion control algorithm (default). <code>cubic</code> in a â€¦\nThe related network path between local <code>SocketAddr</code> and peer â€¦\nStores configuration shared between multiple connections.\nError in congestion control.\nAvailable congestion control algorithms.\nA QUIC connection.\nRepresents information carried by <code>CONNECTION_CLOSE</code> frames.\nA QUIC connection ID.\nAn endpoint received transport parameters that were badly â€¦\nThe server refused to accept a new connection.\nLogs any events of Core importance.\nThe peer sent more data in CRYPTO frames than we can â€¦\nAn endpoint has received more data in CRYPTO frames than â€¦\nA cryptographic operation failed.\nThere is no more work to do.\nContains the error value\nA QUIC error.\nLogs any events of Core, Base and Extra importance\nThe related network path between local <code>SocketAddr</code> and peer â€¦\nThe received data exceeds the streamâ€™s final size.\n(1) An endpoint received a STREAM frame containing data â€¦\nThe peer violated the local flow control limits.\nAn endpoint received more data than it permitted in its â€¦\nAn endpoint received a frame that was badly formatted â€“ â€¦\nHandshake packet.\nA QUIC packetâ€™s header.\nToo many identifiers were provided.\nInitial packet.\nThe endpoint encountered an internal error and cannot â€¦\nThe peer sent an ACK frame with an invalid range.\nThe provided packet cannot be parsed because it contains â€¦\nThe provided packet cannot be parsed.\nThe operation cannot be completed because the connection â€¦\nThe operation cannot be completed because the stream is in â€¦\nA server received a client Initial that contained an â€¦\nThe peerâ€™s transport params cannot be parsed.\nError in key update.\nAn endpoint detected errors in performing key updates.\nExit startup due to excessive loss\nThe maximum length of a connection ID.\nThe minimum length of Initial packets sent by a client.\nA new network path (local address, peer address) has been â€¦\nAn endpoint uses this with CONNECTION_CLOSE to signal that â€¦\nAn endpoint has determined that the network path is â€¦\nContains the success value\nThe peer send an ACK frame for a skipped packet used for â€¦\nNot enough available identifiers.\nThe current QUIC wire version.\nA path-specific event.\nStatistics about the path of a connection.\nThe connection observed that the peer migrated over the â€¦\nExit startup due to persistent queue.\nAn endpoint detected an error with protocol compliance â€¦\nQlog logging level.\nStop receiving stream data.\nAncillary information about incoming packets.\nReno congestion control algorithm. <code>reno</code> in a string form.\nA specialized <code>Result</code> type for quiche operations.\nRetry packet.\nThe stack observes that the Source Connection ID with the â€¦\nAncillary information about outgoing packets.\n1-RTT short header packet.\nThe side of the stream to be shut down.\nAn iterator over SocketAddr.\nStatistics from when a CCA first exited the startup phase.\nThe reason a CCA exited the startup phase.\nStatistics about the connection.\nAn iterator over QUIC streams.\nThe peer violated the local stream limits.\nAn endpoint received a frame for a stream identifier that â€¦\nThe specified stream was reset by the peer.\nAn endpoint received a frame for a stream that was not in â€¦\nThe specified stream was stopped by the peer.\nThe TLS handshake failed.\nAn endpoint received transport parameters that were badly â€¦\nQUIC Transport Parameters\nQUIC packet type.\nQUIC Unknown Transport Parameter.\nAn Iterator over unknown transport parameters.\nTrack unknown transport parameters, up to a limit.\nThe provided packet cannot be parsed because its version â€¦\nThe related network path between local <code>SocketAddr</code> and peer â€¦\nVersion negotiation packet.\nQUIC error codes sent on the wire.\nStop sending stream data.\n0-RTT packet.\nCreates a new server-side connection.\nCreates a new server-side connection, with a custom buffer â€¦\nThe ACK delay exponent.\nThe number of bytes sent acked.\nWhether the path is marked as active.\nThe active connection ID limit.\nReturns the number of source Connection IDs that are â€¦\nReturns the negotiated ALPN protocol.\nThe time to send the packet out.\nReturns the number of spare Destination Connection IDs, â€¦\nGenerate a new buffer from a given slice, the buffer must â€¦\nTotal duration during which this side of the connection was\nThe space remaining for storing unknown transport â€¦\nCloses the connection with the given error and reason.\nCreates a new client-side connection.\nCreates a new client-side connection, with a custom buffer â€¦\nThe size of the connectionâ€™s congestion window in bytes.\nThe congestion_window recorded at Startup exit.\nThe destination connection ID of the packet.\nThe most recent data delivery rate estimate in bytes/s.\nReturns the destination connection ID.\nReturns the maximum DATAGRAM payload that can be sent.\nPurges queued outgoing DATAGRAMs matching the predicate.\nReads the first received DATAGRAM.\nThe number of DATAGRAM frames received.\nThe number of DATAGRAM frames received.\nReturns the length of the first stored DATAGRAM.\nReads the first received DATAGRAM without removing it from â€¦\nReturns the total size of all items in the DATAGRAM â€¦\nReturns the number of items in the DATAGRAM receive queue.\nReads the first received DATAGRAM.\nSends data in a DATAGRAM frame.\nReturns the total size of all items in the DATAGRAM send â€¦\nReturns the number of items in the DATAGRAM send queue.\nSends data in a DATAGRAM frame.\nThe number of DATAGRAM frames sent.\nThe number of DATAGRAM frames sent.\nWhether active migration is disabled.\nConfigures whether to do path MTU discovery.\nConfigures whether to enable receiving DATAGRAM frames.\nEnables sending or receiving early data.\nConfigures whether to enable HyStart++.\nConfigures whether to enable pacing.\nEnables tracking unknown transport parameters.\nThe error code carried by the <code>CONNECTION_CLOSE</code> frame.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe remote address the packet was received from.\nThe local address the packet should be sent from.\nCreates a new connection ID from the given slice.\nParses a QUIC packet header from the given buffer.\nConverts a string to <code>CongestionControlAlgorithm</code>.\nCreates a new connection ID from the given vector.\nReturns whether gcongestion is enabled.\nReturns the desired send time for the next packet.\nConfigures whether to send GREASE values.\nHTTP/3 wire protocol and QPACK implementation.\nThe ID of the unknown transport parameter.\nThe initial flow control maximum data for the connection.\nThe initial flow control maximum data for local â€¦\nThe initial flow control maximum data for remote â€¦\nThe initial flow control maximum data for unidirectional â€¦\nThe initial maximum bidirectional streams.\nThe initial maximum unidirectional streams.\nThe value that the endpoint included in the Source CID â€¦\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns a new owning connection ID from the given existing â€¦\nWhether the error came from the application or the â€¦\nReturns true if the connection is closed.\nReturns whether or not the DATAGRAM recv queue is full.\nReturns whether or not the DATAGRAM send queue is full.\nReturns true if the connection is draining.\nReturns true if the connection handshake is complete.\nReturns true if the connection has a pending handshake â€¦\nReturns whether the network path with local address <code>from</code> â€¦\nReturns whether there is stream or DATAGRAM data available â€¦\nChecks whether an unknown Transport Parameterâ€™s ID is in â€¦\nReturns true if the connection is resumed.\nReturns whether or not this is a server-side connection.\nReturns true if the connection was closed due to the idle â€¦\nConfigures the given certificate chain.\nConfigures the given private key.\nSpecifies a directory where trusted CA certificates are â€¦\nSpecifies a file where trusted CA certificates are stored â€¦\nThe local address of the path.\nReturns the error <code>close()</code> was called with, or internally â€¦\nEnables logging of secrets.\nThe number of QUIC packets that were lost.\nThe number of QUIC packets that were lost.\nThe number of bytes sent lost.\nThe number of bytes lost.\nThe max ACK delay.\nDATAGRAM frame extension parameter, if any.\nThe maximum idle timeout.\nReturns the maximum pacing into the future.\nThe maximum round-trip time observed.\nReturns the maximum possible size of egress UDP payloads.\nThe maximum UDP payload size.\nMigrates the connection over the given network path â€¦\nMigrates the connection to a new local address <code>local_addr</code>.\nThe minimum round-trip time observed.\nWrites a version negotiation packet.\nCreates a config object with the given version.\nProvides additional source Connection IDs that the peer â€¦\nProcesses a timeout event.\nValue of Destination CID field from first Initial packet â€¦\nReturns whether pacing is enabled.\nThe unknown transport parameters.\nThe total number of PATH_CHALLENGE frames that were â€¦\nProcesses path-specific events.\nCollects and returns statistics about each known path for â€¦\nThe number of known paths for the connection.\nReturns an iterator over destination <code>SockAddr</code>s whose â€¦\nThe peer address of the path.\nReturns the peerâ€™s leaf certificate (if any) as a â€¦\nReturns the peerâ€™s certificate chain (if any) as a â€¦\nReturns the error received from the peer, if any.\nReturns the number of bidirectional streams that can be â€¦\nReturns the number of unidirectional streams that can be â€¦\nReturns reference to peerâ€™s transport parameters. â€¦\nReturns the PMTU for the active path if it exists. This â€¦\nThe current PMTU for the connection.\nRequests the stack to perform path validation of the â€¦\nPushes an unknown transport parameter into storage if â€¦\nReturns a mutable reference to the QlogStreamer, if it â€¦\nReturns an iterator over streams that have outstanding â€¦\nThe reason carried by the <code>CONNECTION_CLOSE</code> frame.\nThe reason a CCA exited the startup phase.\nProcesses QUIC packets received from the peer.\nThe number of QUIC packets received.\nThe number of QUIC packets received.\nThe number of received bytes.\nThe number of received bytes.\nThe number of streams reset by local.\nThe number of streams reset by remote.\nRequests the retirement of the destination Connection ID â€¦\nReturns a source <code>ConnectionId</code> that has been retired.\nReturns the number of source Connection IDs that are â€¦\nThe number of sent QUIC packets with retransmitted data.\nThe number of sent QUIC packets with retransmitted data.\nWrites a stateless retry packet.\nThe value that the server included in the Source CID field â€¦\nRevalidates the PMTU for the active path by sending a new â€¦\nThe estimated round-trip time of the connection.\nThe estimated round-trip time variation in samples using a â€¦\nThe source connection ID of the packet.\nReturns the number of source Connection IDs that should be â€¦\nWrites a single QUIC packet to be sent to the peer.\nSchedule an ack-eliciting packet on the active path.\nSchedule an ack-eliciting packet on the specified path.\nWrites a single QUIC packet to be sent to the peer from â€¦\nReturns the size of the send quantum, in bytes.\nReturns the size of the send quantum over the given â€¦\nThe number of QUIC packets sent.\nThe number of QUIC packets sent.\nThe number of sent bytes.\nThe number of sent bytes.\nReturns the server name requested by the client.\nReturns the serialized cryptographic session for the â€¦\nSets the <code>ack_delay_exponent</code> transport parameter.\nSets the <code>active_connection_id_limit</code> transport parameter.\nConfigures the list of supported application protocols.\nConfigures the list of supported application protocols â€¦\nSets the congestion control algorithm used.\nSets the congestion control algorithm used.\nSets the congestion control algorithm used by string.\nSets the congestion control algorithm used by string.\nSets the <code>disable_active_migration</code> transport parameter.\nSets whether the QUIC connection should avoid reusing â€¦\nConfigures whether to do path MTU discovery.\nConfigures whether to enable HyStart++.\nSets initial congestion window size in terms of packet â€¦\nSets initial congestion window size in terms of packet â€¦\nSets the <code>initial_max_data</code> transport parameter.\nSets the <code>initial_max_stream_data_bidi_local</code> transport â€¦\nSets the <code>initial_max_stream_data_bidi_remote</code> transport â€¦\nSets the <code>initial_max_stream_data_uni</code> transport parameter.\nSets the <code>initial_max_streams_bidi</code> transport parameter.\nSets the <code>initial_max_streams_bidi</code> transport parameter.\nSets the <code>initial_max_streams_uni</code> transport parameter.\nSets the connectionâ€™s initial RTT.\nSets keylog output to the designated <code>Writer</code>.\nSets the <code>max_ack_delay</code> transport parameter.\nSets the anti-amplification limit factor.\nSets the maximum size of the connection window.\nSets the <code>max_idle_timeout</code> transport parameter, in â€¦\nSets the <code>max_idle_timeout</code> transport parameter, in â€¦\nSets the <code>max_idle_timeout</code> transport parameter, in â€¦\nSets the max value for pacing rate.\nSets the max value for pacing rate.\nSets the <code>max_udp_payload_size transport</code> parameter.\nSets the maximum outgoing UDP payload size.\nSets the maximum outgoing UDP payload size.\nSets the maximum size of the stream window.\nConfigures whether to enable pacing.\nConfigures the max number of queued received â€¦\nSets qlog output to the designated <code>Writer</code>.\nSets qlog output to the designated <code>Writer</code>.\nSets the send capacity factor.\nSets the send capacity factor.\nConfigures the given session for resumption.\nSets the initial stateless reset token.\nConfigures the session ticket key material.\nReturns the source connection ID.\nReturns all active source connection IDs.\nSplit the buffer at a given point, after the split the old â€¦\nThe number of QUIC packets that were marked as lost but â€¦\nStatistics from when a CCA first exited the startup phase.\nToken used for verifying stateless resets\nCollects and returns statistics about the connection.\nThe number of streams stopped by local.\nThe number of streams stopped by remote.\nReturns the streamâ€™s send capacity in bytes.\nReturns true if all the data has been read from the â€¦\nSets the priority for a stream.\nReturns true if the stream has data that can be read.\nReturns the next stream that has data to read.\nReads contiguous data from a stream into the provided â€¦\nThe number of stream bytes retransmitted.\nThe number of stream bytes retransmitted.\nWrites data to a stream.\nWrites data to a stream with zero copying, instead, it â€¦\nShuts down reading or writing from/to the specified stream.\nReturns true if the stream has enough send capacity.\nReturns the next stream that can be written to.\nReturns the amount of time until the next timeout event.\nReturns when the next timeout event will occur.\nThe local address the packet was received on.\nThe remote address the packet should be sent to.\nCreates a qlog event for connection transport parameters â€¦\nThe address verification token of the packet. Only present â€¦\nThe number of times PTO (probe timeout) fired.\nReturns a string uniquely representing the connection.\nTry to prepend a prefix to the buffer, return true if â€¦\nTry to prepend a prefix to the buffer, return true if â€¦\nThe type of the packet.\nUnknown peer transport parameters and values, if any.\nThe path validation state.\nOriginal data representing the value of the unknown â€¦\nConfigures whether to verify the peerâ€™s certificate.\nThe version of the packet.\nReturns true if the given protocol version is supported.\nThe list of versions in the packet. Only present in â€¦\nCreates a config object with the given version and â€¦\nReturns an iterator over streams that can be written in â€¦\nList of ALPN tokens of supported HTTP/3 versions.\nThe provided buffer is too short.\nA required critical stream was closed.\nA stream required by the HTTP/3 connection was closed or â€¦\nAn HTTP/3 configuration.\nThe TCP connection established in response to a CONNECT â€¦\nThe TCP connection established in response to a CONNECT â€¦\nAn HTTP/3 connection.\nData was received.\nThere is no error or no work to do\nContains the error value\nAn HTTP/3 error.\nAn HTTP/3 connection event.\nEndpoint detected that the peer is exhibiting behavior â€¦\nThe endpoint detected that its peer is exhibiting a â€¦\nStream was closed,\nFrame violated layout or size rules.\nA frame that fails to satisfy layout requirements or with â€¦\nA frame was received which is not permitted in the current â€¦\nA frame was received that was not permitted in the current â€¦\nPeer violated protocol requirements in a way that does not â€¦\nGOAWAY was received.\nAn owned name-value pair representing a raw HTTP header.\nA non-owned name-value pair representing a raw HTTP header.\nRequest/response headers were received.\nStream ID or Push ID greater that current maximum was used â€¦\nA stream ID or push ID was used incorrectly, such as â€¦\nInternal error in the HTTP/3 stack.\nAn internal error has occurred in the HTTP stack.\nAn HTTP message was malformed and cannot be processed.\nAn HTTP message was malformed and cannot be processed.\nNo SETTINGS frame at beginning of control stream.\nNo SETTINGS frame was received at the beginning of the â€¦\nA trait for types with associated string name and value.\nNo error. This is used when the connection or stream needs â€¦\nContains the success value\nExtensible Priorities parameters.\nPRIORITY_UPDATE was received.\nQPACK Header block decompression failure.\nRequest or its response cancelled.\nThe request or its response (including pushed response) is â€¦\nClientâ€™s request stream terminated without containing a â€¦\nThe clientâ€™s stream terminated without containing a â€¦\nServer rejected request.\nA server rejected a request without performing any â€¦\nStream was reset.\nA specialized <code>Result</code> type for quiche HTTP/3 operations.\nError in the payload of a SETTINGS frame.\nAn endpoint detected an error in the payload of a SETTINGS â€¦\nStatistics about the connection.\nThe underlying QUIC stream (or connection) doesnâ€™t have â€¦\nThe endpoint detected that its peer created a stream that â€¦\nThe endpoint detected that its peer created a stream that â€¦\nError originated from the transport layer.\nThe requested operation cannot be served over HTTP/3. Peer â€¦\nThe requested operation cannot be served over HTTP/3. The â€¦\nHTTP/3 error codes sent on the wire.\nReturns whether the peer enabled HTTP/3 DATAGRAM frame â€¦\nSets or omits the <code>SETTINGS_ENABLE_CONNECT_PROTOCOL</code> setting.\nReturns whether the peer enabled extended CONNECT support.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGenerates an HTTP/3 GREASE variable length integer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the objectâ€™s name.\nCreates a new configuration object with default settings.\nCreates a new header.\nCreates a new header.\nCreates a new Priority.\nGets the raw settings from peer including unknown and â€¦\nProcesses HTTP/3 data received from the peer.\nThe number of bytes received on the QPACK decoder stream.\nThe number of bytes received on the QPACK encoder stream.\nReads request or response body data into the provided â€¦\nSends additional HTTP/3 headers.\nSends additional HTTP/3 headers with specified priority.\nSends an HTTP/3 body chunk on the given stream.\nSends an HTTP/3 body chunk provided as a raw buffer on the â€¦\nSends a GOAWAY frame to initiate graceful connection â€¦\nSends a PRIORITY_UPDATE frame on the control stream with â€¦\nSends an HTTP/3 request.\nSends an HTTP/3 response on the specified stream with â€¦\nSends an HTTP/3 response on the specified stream with â€¦\nSets additional HTTP/3 settings.\nSets the <code>SETTINGS_MAX_FIELD_SECTION_SIZE</code> setting.\nSets the <code>SETTINGS_QPACK_BLOCKED_STREAMS</code> setting.\nSets the <code>SETTINGS_QPACK_MAX_TABLE_CAPACITY</code> setting.\nCollects and returns statistics about the connection.\nTake the last PRIORITY_UPDATE for a prioritized element ID.\nTry to parse an Extensible Priority field value.\nReturns the objectâ€™s value.\nCreates a new HTTP/3 connection using the provided QUIC â€¦\nThe list of received header fields. The application should â€¦\nWhether more frames will follow the headers on the stream.")